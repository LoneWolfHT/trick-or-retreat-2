[gd_resource type="ShaderMaterial" load_steps=7 format=2]

[ext_resource path="res://assets/buildings.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeColorOp" id=1]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeTexture" id=2]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeColorOp" id=3]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeColorConstant" id=4]
output_port_for_preview = 0
constant = Color( 0, 0, 0, 0.168627 )

[sub_resource type="VisualShader" id=5]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_4;



void vertex() {
// Output:0

}

void fragment() {
// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, UV.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Color:6
	vec3 n_out6p0 = vec3(0.000000, 0.000000, 0.000000);
	float n_out6p1 = 0.168627;

// ColorOp:5
	vec3 n_out5p0 = abs(n_out4p0 - vec3(n_out6p1));

// ColorOp:3
	vec3 n_out3p0 = abs(n_out4p0 - n_out5p0);

// Output:0
	COLOR.rgb = n_out3p0;
	COLOR.a = n_out4p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -605.414, 75 )
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 350, 98 )
nodes/fragment/3/node = SubResource( 1 )
nodes/fragment/3/position = Vector2( 28, 140 )
nodes/fragment/4/node = SubResource( 2 )
nodes/fragment/4/position = Vector2( -574, -14 )
nodes/fragment/5/node = SubResource( 3 )
nodes/fragment/5/position = Vector2( -168, 154 )
nodes/fragment/6/node = SubResource( 4 )
nodes/fragment/6/position = Vector2( -340, 220 )
nodes/fragment/connections = PoolIntArray( 4, 0, 3, 0, 3, 0, 0, 0, 5, 0, 3, 1, 4, 0, 5, 0, 4, 1, 0, 1, 6, 1, 5, 1 )

[resource]
shader = SubResource( 5 )
